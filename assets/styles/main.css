@font-face {
    font-family: 'Orbitron';
    src: url('../fonts/Orbitron.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

:root {
    --fontFamily: 'Orbitron', sans-serif;
    --fontSize: 16px;
    --primaryFontClr: #333333;
    --colorBg: #ffffff;
    --boxWidth: 335px;
    --boxHeight: 250px;
    --boxDeep: 100px;
    --boxRotateX: 0deg;
    --boxRotateY: 0deg;
}

html {
    font-family: var(--fontFamily);
    font-size: var(--fontSize);
}

body {
    margin: 0;
    padding: 0;
    width: 100vw;
    height: 100vh;
    background-color: var(--colorBg); 
    transition: .3s;
}

.container {
    margin-left: 15px;
    margin-right: 15px;
    position: relative;
    min-height: 100%;
}

label[for="switch-dark"] {
    top: 10px;	
    width: 100px;
    height: 50px;
    position: relative;
    background: #EBEBEB;
    border-radius: 200px;
    cursor: pointer;
    transition: .3s;
    display: inline-block;
    min-width: 100px;
}

label[for="switch-dark"]:after {
    content: '';
    width: 40px;
    height: 40px;
    position: absolute;
    top: 5px;
    left: 5px;
    background: #7e7e7e;
    border-radius: 180px;
    box-shadow: 0px 5px 10px rgba(0,0,0,0,0.2);
    transition: .3s;
}

label[for="switch-dark"] svg {
    width: 30px;
    height: 30px;
    position: absolute;
    z-index: 1;
    top: 10px;
}

label[for="switch-dark"] svg path {
    transition: 1s;
}

label[for="switch-dark"] svg.sun {
   left: 10px; 
} 

label[for="switch-dark"] svg.sun path {
    stroke: #fff;
}

input:checked + label svg.sun path {
    stroke: #7e7e7e;
}

label[for="switch-dark"] svg.moon {
   left: 60px; 
}

label[for="switch-dark"] svg.moon path {
    stroke: #7e7e7e;
}

input:checked + label svg.moon path {
    stroke: #fff;
}

input#switch-dark {
    width: 0;
    height: 0;
    display: none;
}

label[for="switch-dark"]:active:after {
    width: 55px;
} 

input#switch-dark:checked + label:after {
    left: 95px;
    transform: translateX(-100%);
    background: linear-gradient(180deg, #777, #3e3e3e);
} 

.main-navigation {
    display: flex;
}

.nav-list {
    margin-left: auto;
    display: flex;
    list-style-type: none;
    padding: 0;
}

.nav-item:not(:last-child) {
    margin-right: 1rem;
}

.nav-item svg {
    max-width: 30px;
    height: fit-content;
    transition: 0.2s;
}

.nav-item:hover svg {
    transform: scale(1.1);
}

.main-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: absolute;
    width: 100%;
    top: 50%;
    transform: translateY(-50%);
}

.author-name {
    font-size: 2rem;
    font-weight: 400;
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
    text-align: center;
    font-weight: 700;
    color: var(--primaryFontClr);
}

.main-title {
    font-size: 1rem;
    font-weight: 400;
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
    text-align: center;
    color: var(--primaryFontClr);
}

.footer {
    position: absolute;
    bottom: 0;
    width: 100%;
}

.person {
    position: absolute;
    top: 50%;
    width: 100%;
    transform: translateY(-50%)
}

.scene {
    width: var(--boxWidth);
    height: var(--boxHeight);
    perspective: 500px;

    & .box {
        width: var(--boxWidth);
        height: var(--boxHeight);
        position: relative;
        transform-style: preserve-3d;
        transform: translateZ(-50px) rotateX(var(--boxRotateX)) rotateY(var(--boxRotateY));
        translate: transform .3s;

        & .box__face {
            /* border: 1px solid #333333; */
            position: absolute;
        }

        & .box__face--front,
        & .box__face--back {
            width: var(--boxWidth);
            height: var(--boxHeight);
        }

        & .box__face--front {
            transform: rotateY(0deg) translateZ(calc(var(--boxDeep) / 2));
        }

        & .box__face--back {
            transform: rotateY(180deg) translateZ(calc(var(--boxDeep) / 2));
        }

        & .box__face--right,
        & .box__face--left {
            width: var(--boxDeep);
            height: var(--boxHeight);
            left: calc((var(--boxWidth) / 2) - (var(--boxDeep) / 2));
        }

        & .box__face--right {
            transform: rotateY(90deg) translateZ(calc(var(--boxWidth) / 2));
        }

        & .box__face--left {
            transform: rotateY(-90deg) translateZ(calc(var(--boxWidth) / 2));
        }

        & .box__face--top,
        & .box__face--bottom {
            width: var(--boxWidth);
            height: var(--boxDeep);
            top: calc((var(--boxHeight) / 2) - (var(--boxDeep) / 2))
        }

        & .box__face--top {
            transform: rotateX(90deg) translateZ(calc(var(--boxHeight) / 2));
        }

        & .box__face--bottom {
            transform: rotateX(-90deg) translateZ(calc(var(--boxHeight) / 2));
        }
    }
}


